Prefix(:=<http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl/>)
Prefix(DUL:=<http://www.ontologydesignpatterns.org/ont/dul/DUL.owl#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(IOLite:=<http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl#>)
Prefix(owl2xml:=<http://www.w3.org/2006/12/owl2-xml#>)


Ontology(<http://www.ontologydesignpatterns.org/ont/dul/IOLite.owl>
Import(<file://./DUL.owl>)
Annotation(rdfs:comment "An ontology of information objects, encodings and realizations, as a plugin to DOLCE-Ultralite (reusing mainly the dul:expresses and dul:realizes relations from it). 
Several patterns are contained inside this ontology:
- encodings of information entities
- kinds of realizations (gestural motions, depictions, digital, multimedia, speech, etc.)
- combinatorial relations between information objects
- relations between formal expressions and generalized expressions (lexicalizations, formalizations)
- relations between formal expressions and their assignments in formal semantics
- relations between information objects and schemata (data structures, KOS, etc.)
- authorship
- kinds of linguistic objects
- copies, reproductions, etc.
- cultural combination of information objects (reuse, mixing, metaphorical blending)"^^xsd:string)
Annotation(rdfs:label "Information Objects ontology"^^xsd:string)
Annotation(owl:versionInfo "1.8"^^xsd:string)
Annotation(owl:versionInfo "In 1.8, all object properties have been aligned to associatedWith, and some comments have been added.
In 1.7, the encodes object property has been modified in order to support any kind of information entity (purely social object or realization), and to give justice to computer science pragmatic equivalence between information objects that are fully encoded for computing, and the actual bits travelling in a machine or network, based on that encoding. The realizes property has been consequenctly declared as a subproperty of encodes.
Also removed redundant owl:someValuesFrom axioms
In 1.6, broadened range of hasRepresentationLanguage
In 1.5, some fixes added wrt to new plugins (Roles.owl, CollectionsLite.owl).
In 1.4, all elements have got English labels. Added the class LinguisticAct, useful to relate Agent(s) when use information objects to express meaning with some CommunicativeFunction (from the theory by Jakobson). Moreover, the relation between formal patterns and information patterns have been enriched. Some bugs fixed."^^xsd:string)

Declaration(Class(DUL:Action))
Declaration(Class(DUL:Agent))
Declaration(Class(DUL:Community))
Declaration(Class(DUL:Contract))
Declaration(Class(DUL:Description))
Declaration(Class(DUL:Entity))
Declaration(Class(DUL:FormalEntity))
Declaration(Class(DUL:InformationEntity))
Declaration(Class(DUL:InformationObject))
Declaration(Class(DUL:InformationRealization))
Declaration(Class(DUL:PhysicalAgent))
Declaration(Class(DUL:PhysicalArtifact))
Declaration(Class(DUL:Plan))
Declaration(Class(DUL:PlanExecution))
Declaration(Class(DUL:Process))
Declaration(Class(DUL:Role))
Declaration(Class(DUL:Situation))
Declaration(Class(DUL:SocialObject))
Declaration(Class(DUL:Theory))
Declaration(Class(IOLite:BodilyMotion))
Declaration(Class(IOLite:Code))
Declaration(Class(IOLite:CommunicativeFunction))
Declaration(Class(IOLite:ContractText))
Declaration(Class(IOLite:DBSchema))
Declaration(Class(IOLite:DataStructure))
Declaration(Class(IOLite:Datum))
Declaration(Class(IOLite:Depiction))
Declaration(Class(IOLite:DigitalPhoto))
Declaration(Class(IOLite:DigitalResource))
Declaration(Class(IOLite:Drawing))
Declaration(Class(IOLite:FormalExpression))
Declaration(Class(IOLite:FormalLanguage))
Declaration(Class(IOLite:Gesture))
Declaration(Class(IOLite:Grapheme))
Declaration(Class(IOLite:GraphicArt))
Declaration(Class(IOLite:IconicLanguage))
Declaration(Class(IOLite:IconicObject))
Declaration(Class(IOLite:KOS))
Declaration(Class(IOLite:Language))
Declaration(Class(IOLite:Lexeme))
Declaration(Class(IOLite:Lexicon))
Declaration(Class(IOLite:LinguisticAct))
Declaration(Class(IOLite:LinguisticFunction))
Declaration(Class(IOLite:LinguisticObject))
Declaration(Class(IOLite:LinguisticTheory))
Declaration(Class(IOLite:Morpheme))
Declaration(Class(IOLite:MultimediaObject))
Declaration(Class(IOLite:Multiword))
Declaration(Class(IOLite:NaturalLanguage))
Declaration(Class(IOLite:Painting))
Declaration(Class(IOLite:Phoneme))
Declaration(Class(IOLite:Phrase))
Declaration(Class(IOLite:PlasticArt))
Declaration(Class(IOLite:Sculpture))
Declaration(Class(IOLite:Sentence))
Declaration(Class(IOLite:Sound))
Declaration(Class(IOLite:Speech))
Declaration(Class(IOLite:Statue))
Declaration(Class(IOLite:Term))
Declaration(Class(IOLite:Text))
Declaration(Class(IOLite:Thesaurus))
Declaration(Class(IOLite:Voicing))
Declaration(Class(IOLite:WebPage))
Declaration(Class(IOLite:Word))
Declaration(Class(IOLite:Writing))
Declaration(Class(owl:Thing))
Declaration(ObjectProperty(DUL:associatedWith))
Declaration(ObjectProperty(DUL:describes))
Declaration(ObjectProperty(DUL:expresses))
Declaration(ObjectProperty(DUL:hasComponent))
Declaration(ObjectProperty(DUL:hasPart))
Declaration(ObjectProperty(DUL:hasParticipant))
Declaration(ObjectProperty(DUL:includesObject))
Declaration(ObjectProperty(DUL:isAbout))
Declaration(ObjectProperty(DUL:isComponentOf))
Declaration(ObjectProperty(DUL:isConceptualizedBy))
Declaration(ObjectProperty(DUL:isDefinedIn))
Declaration(ObjectProperty(DUL:isExpressedBy))
Declaration(ObjectProperty(DUL:isRealizedBy))
Declaration(ObjectProperty(DUL:isReferenceOf))
Declaration(ObjectProperty(DUL:isSettingFor))
Declaration(ObjectProperty(DUL:realizes))
Declaration(ObjectProperty(DUL:satisfies))
Declaration(ObjectProperty(IOLite:combinatoriallyRelatedTo))
Declaration(ObjectProperty(IOLite:digitallyReproduces))
Declaration(ObjectProperty(IOLite:encodes))
Declaration(ObjectProperty(IOLite:formallyRepresents))
Declaration(ObjectProperty(IOLite:hasAuthor))
Declaration(ObjectProperty(IOLite:hasCulturalGrounding))
Declaration(ObjectProperty(IOLite:hasCulturalMixingWith))
Declaration(ObjectProperty(IOLite:hasFormalTerm))
Declaration(ObjectProperty(IOLite:hasGrounding))
Declaration(ObjectProperty(IOLite:hasRepresentationLanguage))
Declaration(ObjectProperty(IOLite:hasSchema))
Declaration(ObjectProperty(IOLite:isAssignedTo))
Declaration(ObjectProperty(IOLite:isAssignmentOf))
Declaration(ObjectProperty(IOLite:isAuthorOf))
Declaration(ObjectProperty(IOLite:isCopyOf))
Declaration(ObjectProperty(IOLite:isCulturalGroundingFor))
Declaration(ObjectProperty(IOLite:isDigitallyReproducedBy))
Declaration(ObjectProperty(IOLite:isEncodedBy))
Declaration(ObjectProperty(IOLite:isFormalTermFor))
Declaration(ObjectProperty(IOLite:isFormallyRepresentedIn))
Declaration(ObjectProperty(IOLite:isGroundingFor))
Declaration(ObjectProperty(IOLite:isLexicalizedBy))
Declaration(ObjectProperty(IOLite:isOriginalOf))
Declaration(ObjectProperty(IOLite:isRepresentationLanguageOf))
Declaration(ObjectProperty(IOLite:isReproducedBy))
Declaration(ObjectProperty(IOLite:isReusedBy))
Declaration(ObjectProperty(IOLite:isSchemaOf))
Declaration(ObjectProperty(IOLite:lexicalizes))
Declaration(ObjectProperty(IOLite:metaphoricallyBlendsWith))
Declaration(ObjectProperty(IOLite:reproduces))
Declaration(ObjectProperty(IOLite:reuses))

############################
#   Object Properties
############################

# Object Property: DUL:isRealizedBy (Ã¨ realizzato da)

SubObjectPropertyOf(DUL:isRealizedBy IOLite:isEncodedBy)

# Object Property: DUL:realizes (realizza)

SubObjectPropertyOf(DUL:realizes IOLite:encodes)

# Object Property: IOLite:combinatoriallyRelatedTo (IOLite:combinatoriallyRelatedTo)

AnnotationAssertion(rdfs:comment IOLite:combinatoriallyRelatedTo "Any relation holding between two FormalExpression(s), e.g. a function over formal grammars, boolean operators, syntactic relations defined for the logical vocabulary of a formal language, etc.
Syntactic relations from logical languages have a correspondance to some formal relation."^^xsd:string)
SubObjectPropertyOf(IOLite:combinatoriallyRelatedTo DUL:associatedWith)
InverseObjectProperties(IOLite:combinatoriallyRelatedTo IOLite:combinatoriallyRelatedTo)
SymmetricObjectProperty(IOLite:combinatoriallyRelatedTo)
ObjectPropertyDomain(IOLite:combinatoriallyRelatedTo IOLite:FormalExpression)
ObjectPropertyRange(IOLite:combinatoriallyRelatedTo IOLite:FormalExpression)

# Object Property: IOLite:digitallyReproduces (digitally reproduces)

AnnotationAssertion(rdfs:label IOLite:digitallyReproduces "digitally reproduces"@en)
AnnotationAssertion(rdfs:label IOLite:digitallyReproduces "riproduce digitalmente"@it)
SubObjectPropertyOf(IOLite:digitallyReproduces IOLite:reproduces)
InverseObjectProperties(IOLite:digitallyReproduces IOLite:isDigitallyReproducedBy)
ObjectPropertyDomain(IOLite:digitallyReproduces IOLite:DigitalResource)
ObjectPropertyRange(IOLite:digitallyReproduces DUL:InformationRealization)

# Object Property: IOLite:encodes (IOLite:encodes)

AnnotationAssertion(rdfs:comment IOLite:encodes "Any relation between two information entities, with the first used as an alternative encoding of the second. This encoding can preserve all or part of the informational structure. For example, an XML encoding of a plain text file, a digital scanning of a physical paper document, a reproduction of a painting, etc.
The encoding can be so precise and close to the medium of realization, that distinguishing the maximally encoded object from its realization is superfluous (as in many cases of computer science information entities). For this reason, the relation holds for either dul:InformationObject(s) or dul:InformationRealization(s).
Since the relation holds for either dul:InformationObject(s) or dul:InformationRealization(s), dul:realizes is a subproperty of it."^^xsd:string)
SubObjectPropertyOf(IOLite:encodes DUL:associatedWith)
InverseObjectProperties(IOLite:encodes IOLite:isEncodedBy)
ObjectPropertyDomain(IOLite:encodes DUL:InformationEntity)
ObjectPropertyRange(IOLite:encodes DUL:InformationEntity)

# Object Property: IOLite:formallyRepresents (rappresenta formalmente)

AnnotationAssertion(rdfs:comment IOLite:formallyRepresents "The relation between formal expressions, and anything that they are supposed to represent.
E.g., 'the predicate 'MariachiInTijuana' formallyRepresents the dul:Collection of all mariachis in Tijuana'; 'the equivalence relation '<=>' formallyRepresents the Concept of two entities having the same properties', 'the constant 'John' formallyRepresents the dul:NaturalPerson 'John'.
Notice that a FormalExpression isAssignmentOf (is formally interpreted by) instances of dul:FormalEntity.

formallyRepresents is a particular case of 'dul:isAbout', holding only for formal expressions. 
Anyway, a formal expression that  dul:expresses a dul:SocialObject is also possible, but treats formal expressions as any other kind of dul:InformationObject that express a 'social' or 'cognitive' semantics, not a formal one."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:formallyRepresents "formally represents"@en)
AnnotationAssertion(rdfs:label IOLite:formallyRepresents "rappresenta formalmente"@it)
SubObjectPropertyOf(IOLite:formallyRepresents DUL:isAbout)
InverseObjectProperties(IOLite:formallyRepresents IOLite:isFormallyRepresentedIn)
ObjectPropertyDomain(IOLite:formallyRepresents IOLite:FormalExpression)
ObjectPropertyRange(IOLite:formallyRepresents DUL:Entity)

# Object Property: IOLite:hasAuthor (has author)

AnnotationAssertion(rdfs:label IOLite:hasAuthor "ha come autore"@it)
AnnotationAssertion(rdfs:label IOLite:hasAuthor "has author"@en)
SubObjectPropertyOf(IOLite:hasAuthor DUL:associatedWith)
InverseObjectProperties(IOLite:hasAuthor IOLite:isAuthorOf)
ObjectPropertyDomain(IOLite:hasAuthor DUL:InformationEntity)
ObjectPropertyRange(IOLite:hasAuthor DUL:Agent)

# Object Property: IOLite:hasCulturalGrounding (has cultural grounding)

AnnotationAssertion(rdfs:label IOLite:hasCulturalGrounding "ha sorgente culturale"@it)
AnnotationAssertion(rdfs:label IOLite:hasCulturalGrounding "has cultural grounding"@en)
SubObjectPropertyOf(IOLite:hasCulturalGrounding DUL:associatedWith)
InverseObjectProperties(IOLite:hasCulturalGrounding IOLite:isCulturalGroundingFor)
ObjectPropertyDomain(IOLite:hasCulturalGrounding DUL:SocialObject)
ObjectPropertyRange(IOLite:hasCulturalGrounding DUL:SocialObject)

# Object Property: IOLite:hasCulturalMixingWith (ha una fusione culturale con)

AnnotationAssertion(rdfs:label IOLite:hasCulturalMixingWith "ha una fusione culturale con"@it)
AnnotationAssertion(rdfs:label IOLite:hasCulturalMixingWith "has cultural mixing with"@en)
SubObjectPropertyOf(IOLite:hasCulturalMixingWith DUL:associatedWith)
InverseObjectProperties(IOLite:hasCulturalMixingWith IOLite:hasCulturalMixingWith)
SymmetricObjectProperty(IOLite:hasCulturalMixingWith)
ObjectPropertyDomain(IOLite:hasCulturalMixingWith DUL:SocialObject)
ObjectPropertyRange(IOLite:hasCulturalMixingWith DUL:SocialObject)

# Object Property: IOLite:hasFormalTerm (has formal term)

AnnotationAssertion(rdfs:comment IOLite:hasFormalTerm "The relation between an InformationObject and a FormalExpression (constant, formula, term, sentence, proposition, axiom, etc.) that it is supposed to be given formal interpretation to formalize the InformationObject.
Notice that FormalExpression(s) only are formal terms for InformationObject(s), not for Concept(s) or other for SocialObject(s). On their turn, information object can 'express' (see) SocialObject(s).
E.g., the predicate (FormalExpression) 'TijuanaMariachi' isFormalTermFor the Term 'the mariachis in Tijuana' (that expresses the Collection of all mariachis in Tijuana); the Term 'equivalence relation' (that expresses the Concept of 'two entities having the same properties') hasFormalTerm the '<=>' symbol."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:hasFormalTerm "ha termine formale"@it)
AnnotationAssertion(rdfs:label IOLite:hasFormalTerm "has formal term"@en)
SubObjectPropertyOf(IOLite:hasFormalTerm DUL:isExpressedBy)
SubObjectPropertyOf(IOLite:hasFormalTerm IOLite:isEncodedBy)
InverseObjectProperties(IOLite:hasFormalTerm IOLite:isFormalTermFor)
ObjectPropertyDomain(IOLite:hasFormalTerm DUL:InformationObject)
ObjectPropertyRange(IOLite:hasFormalTerm IOLite:FormalExpression)

# Object Property: IOLite:hasGrounding (has grounding)

AnnotationAssertion(rdfs:comment IOLite:hasGrounding "A formal entity is grounded in some other entity when it is assumed as the (formal, extensional) interpretation of it, for example, the set Dog can be grounded in the collection of all actual dogs (or in some of them that the modeller intends).")
AnnotationAssertion(rdfs:label IOLite:hasGrounding "has grounding"@en)
SubObjectPropertyOf(IOLite:hasGrounding DUL:associatedWith)
InverseObjectProperties(IOLite:hasGrounding IOLite:isGroundingFor)
ObjectPropertyDomain(IOLite:hasGrounding DUL:FormalEntity)
ObjectPropertyRange(IOLite:hasGrounding DUL:Entity)

# Object Property: IOLite:hasRepresentationLanguage (has representation language)

AnnotationAssertion(rdfs:label IOLite:hasRepresentationLanguage "ha linguaggio di rappresentazione"@it)
AnnotationAssertion(rdfs:label IOLite:hasRepresentationLanguage "has representation language"@en)
SubObjectPropertyOf(IOLite:hasRepresentationLanguage DUL:associatedWith)
InverseObjectProperties(IOLite:hasRepresentationLanguage IOLite:isRepresentationLanguageOf)
ObjectPropertyDomain(IOLite:hasRepresentationLanguage DUL:InformationEntity)
ObjectPropertyRange(IOLite:hasRepresentationLanguage IOLite:Language)

# Object Property: IOLite:hasSchema (ha schema)

AnnotationAssertion(rdfs:comment IOLite:hasSchema "A relation between social objects and schemata that organize them. For example, a Tag hasSchema a Folksonomy, a Lexeme hasSchema a Lexicon, etc."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:hasSchema "ha schema"@it)
AnnotationAssertion(rdfs:label IOLite:hasSchema "has schema"@en)
SubObjectPropertyOf(IOLite:hasSchema DUL:associatedWith)
InverseObjectProperties(IOLite:hasSchema IOLite:isSchemaOf)
ObjectPropertyDomain(IOLite:hasSchema DUL:SocialObject)
ObjectPropertyRange(IOLite:hasSchema IOLite:DataStructure)

# Object Property: IOLite:isAssignedTo (formally interprets {@en})

AnnotationAssertion(rdfs:comment IOLite:isAssignedTo "The relation between a FormalExpression, and an Entity (a FormalEntity in case of classes, relations, etc.) that it is supposed to be the reference of the symbol (FormalExpression) that the Entity is an intepretation of. 
In other words, this is the 'formal interpretation' function, by which a logician 'assigns' an Entity to a FormalExpression.
For each type of formal expressions defined in a logical language, an assignment assumption should be indicated, for example, owl:Class should be restricted to: isAssignmentOf allValuesFrom Class. In addition, differently from the general relation formallyRepresents, isAssignmentOf is functional (and its inverse is inverse functional), in order to encode the Tarskian correspondence assumption.
E.g., the Set of 'all mariachis in Tijuana' isAssignedTo the predicate (FormalExpression) 'TijuanaMariachi' (that isFormalTermFor a Term e.g. 'the mariachis in Tijuana')."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:isAssignedTo "formally interprets {@en}"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:isAssignedTo "interpreta formalmente {@it}"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:isAssignedTo "Ã¨ assegnata a"@it)
SubObjectPropertyOf(IOLite:isAssignedTo IOLite:isFormallyRepresentedIn)
InverseObjectProperties(IOLite:isAssignedTo IOLite:isAssignmentOf)
InverseFunctionalObjectProperty(IOLite:isAssignedTo)
ObjectPropertyDomain(IOLite:isAssignedTo DUL:Entity)
ObjectPropertyRange(IOLite:isAssignedTo IOLite:FormalExpression)

# Object Property: IOLite:isAssignmentOf (Ã¨ interpretata formalmente come)

AnnotationAssertion(rdfs:comment IOLite:isAssignmentOf "The relation between a FormalExpression, and an Entity (a FormalEntity in case of classes, relations, etc.) that it is supposed to be the reference of the symbol (FormalExpression) that the Entity is an intepretation of. 
In other words, this property expresses the 'formal interpretation' function, by which a logician 'assigns' an Entity to a FormalExpression. 
For each type of formal expressions defined in a logical language, an assignment assumption should be indicated, for example, owl:Class should be restricted to: isAssignmentOf allValuesFrom Class. In addition, differently from the general relation formallyRepresents, isAssignmentOf is functional (and its inverse is inverse functional), in order to encode the Tarskian correspondence assumption.
E.g., the Set of 'all mariachis in Tijuana' isAssignedTo the predicate (FormalExpression) 'TijuanaMariachi' (that isFormalTermFor a Term e.g. 'the mariachis in Tijuana')."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:isAssignmentOf "is formally interpreted as"@en)
AnnotationAssertion(rdfs:label IOLite:isAssignmentOf "Ã¨ assegnazione di"@it)
AnnotationAssertion(rdfs:label IOLite:isAssignmentOf "Ã¨ interpretata formalmente come"@it)
SubObjectPropertyOf(IOLite:isAssignmentOf IOLite:formallyRepresents)
FunctionalObjectProperty(IOLite:isAssignmentOf)
ObjectPropertyDomain(IOLite:isAssignmentOf IOLite:FormalExpression)
ObjectPropertyRange(IOLite:isAssignmentOf DUL:Entity)

# Object Property: IOLite:isAuthorOf (Ã¨ autore di)

AnnotationAssertion(rdfs:label IOLite:isAuthorOf "is author of"@en)
AnnotationAssertion(rdfs:label IOLite:isAuthorOf "Ã¨ autore di"@it)
SubObjectPropertyOf(IOLite:isAuthorOf DUL:associatedWith)
ObjectPropertyDomain(IOLite:isAuthorOf DUL:Agent)
ObjectPropertyRange(IOLite:isAuthorOf DUL:InformationEntity)

# Object Property: IOLite:isCopyOf (Ã¨ copia di)

AnnotationAssertion(rdfs:comment IOLite:isCopyOf "The original information realization of some copy. Differently from reproductions, copies are not planned to have notable differences from the original. Master copies, author-signed paintings, etc. are examples of originals."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:isCopyOf "is copy of"@en)
AnnotationAssertion(rdfs:label IOLite:isCopyOf "Ã¨ copia di"@it)
SubObjectPropertyOf(IOLite:isCopyOf DUL:associatedWith)
InverseObjectProperties(IOLite:isCopyOf IOLite:isOriginalOf)
ObjectPropertyDomain(IOLite:isCopyOf DUL:InformationRealization)
ObjectPropertyRange(IOLite:isCopyOf DUL:InformationRealization)

# Object Property: IOLite:isCulturalGroundingFor (Ã¨ una sorgente culturale per)

AnnotationAssertion(rdfs:label IOLite:isCulturalGroundingFor "is cultural grounding for"@en)
AnnotationAssertion(rdfs:label IOLite:isCulturalGroundingFor "Ã¨ una sorgente culturale per"@it)
SubObjectPropertyOf(IOLite:isCulturalGroundingFor DUL:associatedWith)
ObjectPropertyDomain(IOLite:isCulturalGroundingFor DUL:SocialObject)
ObjectPropertyRange(IOLite:isCulturalGroundingFor DUL:SocialObject)

# Object Property: IOLite:isDigitallyReproducedBy (is digitally reproduced by)

AnnotationAssertion(rdfs:label IOLite:isDigitallyReproducedBy "is digitally reproduced by"@en)
AnnotationAssertion(rdfs:label IOLite:isDigitallyReproducedBy "Ã¨ digitalmente riprodotto da"@it)
SubObjectPropertyOf(IOLite:isDigitallyReproducedBy IOLite:isReproducedBy)
ObjectPropertyDomain(IOLite:isDigitallyReproducedBy DUL:InformationRealization)
ObjectPropertyRange(IOLite:isDigitallyReproducedBy IOLite:DigitalResource)

# Object Property: IOLite:isEncodedBy (IOLite:isEncodedBy)

AnnotationAssertion(rdfs:comment IOLite:isEncodedBy "Any relation between two information entities, with the first used as an alternative encoding of the second. This encoding can preserve all or part of the informational structure. For example, an XML encoding of a plain text file, a digital scanning of a physical paper document, a reproduction of a painting, etc.
The encoding can be so precise and close to the medium of realization, that distinguishing the maximally encoded object from its realization is superfluous (as in many cases of computer science information entities). For this reason, the relation holds for either dul:InformationObject(s) or dul:InformationRealization(s).
Since the relation holds for either dul:InformationObject(s) or dul:InformationRealization(s), dul:realizes is a subproperty of it."^^xsd:string)
SubObjectPropertyOf(IOLite:isEncodedBy DUL:associatedWith)

# Object Property: IOLite:isFormalTermFor (is formal term for)

AnnotationAssertion(rdfs:comment IOLite:isFormalTermFor "The relation between an InformationObject and a FormalExpression (constant, formula, term, sentence, proposition, axiom, etc.) that it is supposed to be given formal interpretation to formalize the InformationObject.
Notice that FormalExpression(s) only are formal terms for InformationObject(s), not for Concept(s) or for other SocialObject(s). On their turn, information object can 'express' (see) SocialObject(s).
E.g., the predicate (FormalExpression) 'TijuanaMariachi' isFormalTermFor the Term 'the mariachis in Tijuana' (that expresses the Collection of all mariachis in Tijuana); the Term 'equivalence relation' (that expresses the Concept of 'two entities having the same properties') hasFormalTerm the '<=>' symbol."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:isFormalTermFor "is formal term for"@en)
AnnotationAssertion(rdfs:label IOLite:isFormalTermFor "Ã¨ termine formale per"@it)
SubObjectPropertyOf(IOLite:isFormalTermFor DUL:expresses)
SubObjectPropertyOf(IOLite:isFormalTermFor IOLite:encodes)
ObjectPropertyDomain(IOLite:isFormalTermFor IOLite:FormalExpression)
ObjectPropertyRange(IOLite:isFormalTermFor DUL:InformationObject)

# Object Property: IOLite:isFormallyRepresentedIn (Ã¨ rappresentato formalmente in)

AnnotationAssertion(rdfs:comment IOLite:isFormallyRepresentedIn "The relation between formal expressions, and anything that they are supposed to represent.
E.g., 'the predicate 'MariachiInTijuana' formallyRepresents the dul:Collection of all mariachis in Tijuana'; 'the equivalence relation '<=>' formallyRepresents the concept of two entities having the same properties', 'the constant 'John' formallyRepresents the dul:NaturalPerson John.
Notice that formal expressions are formally interpreted by instances of dul:FormalEntity"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:isFormallyRepresentedIn "is formally represented in"@en)
AnnotationAssertion(rdfs:label IOLite:isFormallyRepresentedIn "Ã¨ rappresentato formalmente in"@it)
SubObjectPropertyOf(IOLite:isFormallyRepresentedIn DUL:isReferenceOf)
ObjectPropertyDomain(IOLite:isFormallyRepresentedIn DUL:Entity)
ObjectPropertyRange(IOLite:isFormallyRepresentedIn IOLite:FormalExpression)

# Object Property: IOLite:isGroundingFor (is grounding for)

AnnotationAssertion(rdfs:label IOLite:isGroundingFor "is grounding for"@en)
SubObjectPropertyOf(IOLite:isGroundingFor DUL:associatedWith)
ObjectPropertyDomain(IOLite:isGroundingFor DUL:Entity)
ObjectPropertyRange(IOLite:isGroundingFor DUL:FormalEntity)

# Object Property: IOLite:isLexicalizedBy (is lexicalized by)

AnnotationAssertion(rdfs:comment IOLite:isLexicalizedBy "A relation between linguistic objects and other information objects (including other linguistic objects).
For example, 'dog' can lexicalize a picture of a dog, a linguistic description of a dog, or the logical class: 'Dog'.
This relation is a subPropertyOf encodes .
In case of FormalExpression(s), it is not the inverse of isFormalTermFor: formal expressions can be said to 'be formal terms' for a LinguisticObject(s), while, independently, linguistic objects can be said to 'lexicalize' formal expressions. The difference is mainly pragmatic: one can take e.g. the word Dog, and decide to have a logical class 'Dog' for it. Someone else can see the logical class 'Dog', and decide to lexicalize it with the words dog, chien, cane, etc. While the relation seems similar, the pragmatic of using them is very different."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:isLexicalizedBy "is lexicalized by"@en)
AnnotationAssertion(rdfs:label IOLite:isLexicalizedBy "Ã¨ lessicalizzato da"@it)
SubObjectPropertyOf(IOLite:isLexicalizedBy DUL:isExpressedBy)
SubObjectPropertyOf(IOLite:isLexicalizedBy IOLite:isEncodedBy)
InverseObjectProperties(IOLite:isLexicalizedBy IOLite:lexicalizes)
ObjectPropertyDomain(IOLite:isLexicalizedBy DUL:InformationObject)
ObjectPropertyRange(IOLite:isLexicalizedBy IOLite:LinguisticObject)

# Object Property: IOLite:isOriginalOf (Ã¨ l'originale di)

AnnotationAssertion(rdfs:label IOLite:isOriginalOf "is original of"@en)
AnnotationAssertion(rdfs:label IOLite:isOriginalOf "Ã¨ l'originale di"@it)
SubObjectPropertyOf(IOLite:isOriginalOf DUL:associatedWith)
ObjectPropertyDomain(IOLite:isOriginalOf DUL:InformationRealization)
ObjectPropertyRange(IOLite:isOriginalOf DUL:InformationRealization)

# Object Property: IOLite:isRepresentationLanguageOf (Ã¨ il linguaggio di rappresentazione di)

AnnotationAssertion(rdfs:label IOLite:isRepresentationLanguageOf "is representation language of"@en)
AnnotationAssertion(rdfs:label IOLite:isRepresentationLanguageOf "Ã¨ il linguaggio di rappresentazione di"@it)
SubObjectPropertyOf(IOLite:isRepresentationLanguageOf DUL:associatedWith)
ObjectPropertyDomain(IOLite:isRepresentationLanguageOf IOLite:Language)
ObjectPropertyRange(IOLite:isRepresentationLanguageOf DUL:InformationEntity)

# Object Property: IOLite:isReproducedBy (is reproduced by)

AnnotationAssertion(rdfs:label IOLite:isReproducedBy "is reproduced by"@en)
AnnotationAssertion(rdfs:label IOLite:isReproducedBy "Ã¨ riprodotto da"@it)
SubObjectPropertyOf(IOLite:isReproducedBy IOLite:isEncodedBy)
InverseObjectProperties(IOLite:isReproducedBy IOLite:reproduces)
ObjectPropertyDomain(IOLite:isReproducedBy DUL:InformationRealization)
ObjectPropertyRange(IOLite:isReproducedBy DUL:InformationRealization)

# Object Property: IOLite:isReusedBy (IOLite:isReusedBy)

SubObjectPropertyOf(IOLite:isReusedBy DUL:associatedWith)
InverseObjectProperties(IOLite:isReusedBy IOLite:reuses)
ObjectPropertyDomain(IOLite:isReusedBy DUL:InformationEntity)
ObjectPropertyRange(IOLite:isReusedBy DUL:InformationEntity)

# Object Property: IOLite:isSchemaOf (is schema of)

AnnotationAssertion(rdfs:comment IOLite:isSchemaOf "A relation between social objects and schemata that organize them. For example, a Tag hasSchema a Folksonomy, a Lexeme hasSchema a Lexicon, etc."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:isSchemaOf "is schema of"@en)
AnnotationAssertion(rdfs:label IOLite:isSchemaOf "Ã¨ schema di"@it)
SubObjectPropertyOf(IOLite:isSchemaOf DUL:associatedWith)
ObjectPropertyDomain(IOLite:isSchemaOf IOLite:DataStructure)
ObjectPropertyRange(IOLite:isSchemaOf DUL:SocialObject)

# Object Property: IOLite:lexicalizes (lessicalizza)

AnnotationAssertion(rdfs:comment IOLite:lexicalizes "A relation between linguistic objects and other information objects (including other linguistic objects).
For example, 'dog' can lexicalize a picture of a dog, a linguistic description of a dog, or the logical class: 'Dog'.
This relation is a subPropertyOf encodes .
In case of FormalExpression(s), it is not the inverse of isFormalTermFor: formal expressions can be said to 'be formal terms' for a LinguisticObject(s), while, independently, linguistic objects can be said to 'lexicalize' formal expressions. The difference is mainly pragmatic: one can take e.g. the word Dog, and decide to have a logical class 'Dog' for it. Someone else can see the logical class 'Dog', and decide to lexicalize it with the words dog, chien, cane, etc. While the relation seems similar, the pragmatic of using them is very different."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:lexicalizes "lessicalizza"@it)
AnnotationAssertion(rdfs:label IOLite:lexicalizes "lexicalizes"@en)
SubObjectPropertyOf(IOLite:lexicalizes DUL:expresses)
SubObjectPropertyOf(IOLite:lexicalizes IOLite:encodes)
ObjectPropertyDomain(IOLite:lexicalizes IOLite:LinguisticObject)
ObjectPropertyRange(IOLite:lexicalizes DUL:InformationObject)

# Object Property: IOLite:metaphoricallyBlendsWith (fusoMetaforicamenteCon)

AnnotationAssertion(rdfs:comment IOLite:metaphoricallyBlendsWith "This property can be used to relate two social objects that are associated by means of a metaphorical blending, e.g. Greek and Aegyptian sphinges.")
AnnotationAssertion(rdfs:label IOLite:metaphoricallyBlendsWith "fusoMetaforicamenteCon"@it)
AnnotationAssertion(rdfs:label IOLite:metaphoricallyBlendsWith "metaphorically blends with"@en)
SubObjectPropertyOf(IOLite:metaphoricallyBlendsWith DUL:associatedWith)
InverseObjectProperties(IOLite:metaphoricallyBlendsWith IOLite:metaphoricallyBlendsWith)
SymmetricObjectProperty(IOLite:metaphoricallyBlendsWith)
ObjectPropertyDomain(IOLite:metaphoricallyBlendsWith DUL:SocialObject)
ObjectPropertyRange(IOLite:metaphoricallyBlendsWith DUL:SocialObject)

# Object Property: IOLite:reproduces (reproduces)

AnnotationAssertion(rdfs:label IOLite:reproduces "reproduces"@en)
AnnotationAssertion(rdfs:label IOLite:reproduces "riproduce"@it)
SubObjectPropertyOf(IOLite:reproduces IOLite:encodes)
ObjectPropertyDomain(IOLite:reproduces DUL:InformationRealization)
ObjectPropertyRange(IOLite:reproduces DUL:InformationRealization)

# Object Property: IOLite:reuses (IOLite:reuses)

AnnotationAssertion(rdfs:comment IOLite:reuses "Any relation between information entities, where the first one reuses (includes, transforms, reengineers, etc.) the second one."^^xsd:string)
SubObjectPropertyOf(IOLite:reuses DUL:associatedWith)
ObjectPropertyDomain(IOLite:reuses DUL:InformationEntity)
ObjectPropertyRange(IOLite:reuses DUL:InformationEntity)



############################
#   Classes
############################

# Class: DUL:FormalEntity (Formal entity)

SubClassOf(DUL:FormalEntity ObjectAllValuesFrom(IOLite:isAssignedTo IOLite:FormalExpression))

# Class: IOLite:BodilyMotion (Movimento corporeo)

AnnotationAssertion(rdfs:comment IOLite:BodilyMotion "An information realization consisting of bodily movements."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:BodilyMotion "Bodily motion"@en)
AnnotationAssertion(rdfs:label IOLite:BodilyMotion "Movimento corporeo"@it)
SubClassOf(IOLite:BodilyMotion DUL:Action)
SubClassOf(IOLite:BodilyMotion DUL:InformationRealization)
SubClassOf(IOLite:BodilyMotion ObjectSomeValuesFrom(DUL:hasParticipant DUL:PhysicalAgent))

# Class: IOLite:Code (Code)

AnnotationAssertion(rdfs:comment IOLite:Code "Any piece of information expressing computational operations, objects, markup, etc."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Code "Code"@en)
AnnotationAssertion(rdfs:label IOLite:Code "Codice"@it)
SubClassOf(IOLite:Code DUL:InformationObject)
SubClassOf(IOLite:Code ObjectAllValuesFrom(DUL:isRealizedBy IOLite:DigitalResource))

# Class: IOLite:CommunicativeFunction (Communicative function)

AnnotationAssertion(rdfs:comment IOLite:CommunicativeFunction "The functions, e.g. defined by Jakobson and by Buhler, which define types of linguistic acts. Jakobson's ones include referential, conative, expressive, phatic, metalinguistic, poetic. Each function has typical roles and tasks that must be played during a linguistic act that achieves the function."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:CommunicativeFunction "Communicative function"@en)
AnnotationAssertion(rdfs:label IOLite:CommunicativeFunction "Funzione comunicativa"@it)
SubClassOf(IOLite:CommunicativeFunction DUL:Plan)

# Class: IOLite:ContractText (Testo di un contratto)

AnnotationAssertion(rdfs:comment IOLite:ContractText "The text of a contract"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:ContractText "Contract text"@en)
AnnotationAssertion(rdfs:label IOLite:ContractText "Testo di un contratto"@it)
SubClassOf(IOLite:ContractText IOLite:Text)
SubClassOf(IOLite:ContractText ObjectSomeValuesFrom(DUL:expresses DUL:Contract))

# Class: IOLite:DBSchema (Schema di base di dati)

AnnotationAssertion(rdfs:comment IOLite:DBSchema "Any conceptual, logical or physical schema for a database."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:DBSchema "Database schema"@en)
AnnotationAssertion(rdfs:label IOLite:DBSchema "Schema di base di dati"@it)
SubClassOf(IOLite:DBSchema IOLite:DataStructure)

# Class: IOLite:DataStructure (Data structure)

AnnotationAssertion(rdfs:comment IOLite:DataStructure "Any data structure, including databases, schemas, lexica, knowledge organizations systems, etc."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:DataStructure "Data structure"@en)
AnnotationAssertion(rdfs:label IOLite:DataStructure "Struttura di dati"@it)
SubClassOf(IOLite:DataStructure DUL:InformationObject)
SubClassOf(IOLite:DataStructure ObjectAllValuesFrom(DUL:isRealizedBy IOLite:DigitalResource))

# Class: IOLite:Datum (Datum)

AnnotationAssertion(rdfs:comment IOLite:Datum "From WordNet: 'an item of factual information derived from measurement or research'"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Datum "Dato"@it)
AnnotationAssertion(rdfs:label IOLite:Datum "Datum"@en)
SubClassOf(IOLite:Datum DUL:InformationObject)

# Class: IOLite:Depiction (Realizzazione visiva)

AnnotationAssertion(rdfs:comment IOLite:Depiction "An information realization consisting of depicted images/signs of any sort (e.g. graffiti, drawings, inscriptions, pictures, sculptures, etc.), which are inscripted on a medium that lasts longer than the depicting act.
It also includes any early form of inscripted iconic expression, which can be considered as original bodily expressions."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Depiction "Depiction"@en)
AnnotationAssertion(rdfs:label IOLite:Depiction "Realizzazione visiva"@it)
SubClassOf(IOLite:Depiction DUL:InformationRealization)
SubClassOf(IOLite:Depiction DUL:PhysicalArtifact)

# Class: IOLite:DigitalPhoto (Digital photo)

AnnotationAssertion(rdfs:label IOLite:DigitalPhoto "Digital photo"@en)
SubClassOf(IOLite:DigitalPhoto IOLite:DigitalResource)

# Class: IOLite:DigitalResource (Risorsa digitale)

AnnotationAssertion(rdfs:comment IOLite:DigitalResource "Any resource that can be computed, e.g. a file, a piece of (implemented) software. This assumes an encoding allowing the computation (e.g. html+http protocol)."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:DigitalResource "Digital resource"@en)
AnnotationAssertion(rdfs:label IOLite:DigitalResource "Risorsa digitale"@it)
SubClassOf(IOLite:DigitalResource DUL:InformationRealization)

# Class: IOLite:Drawing (Drawing)

AnnotationAssertion(rdfs:comment IOLite:Drawing "wn noun: A representation of forms or objects on a surface by means of lines; \"drawings of abstract forms\"; \"he did complicated pen-and-ink drawings like medieval miniatures\""^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Drawing "Disegno"@it)
AnnotationAssertion(rdfs:label IOLite:Drawing "Drawing"@en)
SubClassOf(IOLite:Drawing IOLite:Depiction)

# Class: IOLite:FormalExpression (Formal expression)

AnnotationAssertion(rdfs:comment IOLite:FormalExpression "Any information object represented in a FormalLanguage, usually having a formal interpretation by a dul:FormalEntity, and used to formally represent any Entity"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:FormalExpression "Espressione formale"@it)
AnnotationAssertion(rdfs:label IOLite:FormalExpression "Formal expression"@en)
SubClassOf(IOLite:FormalExpression DUL:InformationObject)
SubClassOf(IOLite:FormalExpression ObjectSomeValuesFrom(IOLite:hasRepresentationLanguage IOLite:FormalLanguage))
SubClassOf(IOLite:FormalExpression ObjectSomeValuesFrom(IOLite:isFormalTermFor DUL:InformationObject))
DisjointClasses(IOLite:FormalExpression IOLite:KOS)

# Class: IOLite:FormalLanguage (Formal language)

AnnotationAssertion(rdfs:comment IOLite:FormalLanguage "A formal language, created by some human, with a fixed grammar, and usually with an explicit formal semantics (i.e. any FormalExpression that is a wff or a valid element of a FormalLanguage has an interpretation wrt to formal entities such as sets, categories, etc.)."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:FormalLanguage "Formal language"@en)
AnnotationAssertion(rdfs:label IOLite:FormalLanguage "Linguaggio formale"@it)
SubClassOf(IOLite:FormalLanguage IOLite:Language)
SubClassOf(IOLite:FormalLanguage ObjectAllValuesFrom(DUL:hasPart IOLite:FormalExpression))

# Class: IOLite:Gesture (Gesto)

AnnotationAssertion(rdfs:label IOLite:Gesture "Gesto"@it)
AnnotationAssertion(rdfs:label IOLite:Gesture "Gesture"@en)
SubClassOf(IOLite:Gesture IOLite:BodilyMotion)

# Class: IOLite:Grapheme (Grafema)

AnnotationAssertion(rdfs:comment IOLite:Grapheme "A part of a word as it can be realized by Writing
A spoken information realization can be 'about' a grapheme (as in reading), but it does not 'realize' it. Only Phoneme(s) are realized by spoken information (Voicing).
BTW, since spoken realizations are a 'primary' code of communication, the difference between direct and indirect spoken realizations (reading) should be considered relevant.
A grapheme is not necessarily able to express a meaning (a dul:SocialObject), although it can in principle (e.g. 'a' in English)."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Grapheme "Grafema"@it)
AnnotationAssertion(rdfs:label IOLite:Grapheme "Grapheme"@en)
SubClassOf(IOLite:Grapheme IOLite:LinguisticObject)
SubClassOf(IOLite:Grapheme ObjectAllValuesFrom(DUL:isRealizedBy IOLite:Writing))

# Class: IOLite:GraphicArt (Opera grafica)

AnnotationAssertion(rdfs:comment IOLite:GraphicArt "wn noun: The arts of drawing or painting or printmaking"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:GraphicArt "Graphic art"@en)
AnnotationAssertion(rdfs:label IOLite:GraphicArt "Opera grafica"@it)
SubClassOf(IOLite:GraphicArt IOLite:Depiction)

# Class: IOLite:IconicLanguage (Linguaggio iconico)

AnnotationAssertion(rdfs:comment IOLite:IconicLanguage "A language made up of graphical elements. It can be natural, artificial, and even formal."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:IconicLanguage "Iconic language"@en)
AnnotationAssertion(rdfs:label IOLite:IconicLanguage "Linguaggio iconico"@it)
SubClassOf(IOLite:IconicLanguage IOLite:Language)

# Class: IOLite:IconicObject (Oggetto iconico)

AnnotationAssertion(rdfs:comment IOLite:IconicObject "An information object represented in an IconicLanguage"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:IconicObject "Iconic object"@en)
AnnotationAssertion(rdfs:label IOLite:IconicObject "Oggetto iconico"@it)
SubClassOf(IOLite:IconicObject DUL:InformationObject)
SubClassOf(IOLite:IconicObject ObjectSomeValuesFrom(IOLite:hasRepresentationLanguage IOLite:IconicLanguage))

# Class: IOLite:KOS (Knowledge organization system)

AnnotationAssertion(rdfs:comment IOLite:KOS "Knowledge Organization Systems: thesauri, terminologies, classification schemes, subject hierarchies, etc."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:KOS "Knowledge organization system"@en)
AnnotationAssertion(rdfs:label IOLite:KOS "Sistema di organizzazione della conoscenza"@it)
SubClassOf(IOLite:KOS IOLite:DataStructure)

# Class: IOLite:Language (Linguaggio)

AnnotationAssertion(rdfs:comment IOLite:Language "A natural or artificial language, provided with an alphabet (or vocabulary) and combinatorial rules. In the case of natural languages, their components are 'temporary' and 'reconstructed' out of actual usage. For example, a grammar for a natural language has the status of a theory for that language, and alternative ones can exist (e.g. generative vs. construction grammars).
Another distinction, between the general (systemic) rules for a language, and the local (contextual) rules for e.g. a certain context, speaker, place, etc., can be made separately.
The most comprehensive classification of languages ha probably been made by Umberto Eco, based on the production modes of the 'signs' that are represented in a certain language. It uses several semiotic dimensions, and will be modeled in a forthcoming ontology."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Language "Language"@en)
AnnotationAssertion(rdfs:label IOLite:Language "Linguaggio"@it)
SubClassOf(IOLite:Language DUL:Description)

# Class: IOLite:Lexeme (Lexeme)

AnnotationAssertion(rdfs:comment IOLite:Lexeme "Lexical entries for dictionaries, lexica, etc. They are used to create reference forms of words."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Lexeme "Lessema"@it)
AnnotationAssertion(rdfs:label IOLite:Lexeme "Lexeme"@en)
SubClassOf(IOLite:Lexeme IOLite:Term)
SubClassOf(IOLite:Lexeme ObjectUnionOf(IOLite:Multiword IOLite:Word))
SubClassOf(IOLite:Lexeme ObjectSomeValuesFrom(IOLite:hasSchema IOLite:Lexicon))

# Class: IOLite:Lexicon (Lessico)

AnnotationAssertion(rdfs:comment IOLite:Lexicon "A collection of lexical items (terms, entries, ...) that are witnessed to have a linguistic relevance."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Lexicon "Lessico"@it)
AnnotationAssertion(rdfs:label IOLite:Lexicon "Lexicon"@en)
SubClassOf(IOLite:Lexicon IOLite:KOS)

# Class: IOLite:LinguisticAct (Linguistic act)

AnnotationAssertion(rdfs:comment IOLite:LinguisticAct "A communicative situation including linguistic objects, agents, and a set of contexts: physical (informational realizations), conceptual (social objects), and referential (entities).
A linguistic act has an associated CommunicativeFunction that it satisfies."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:LinguisticAct "Atto linguistico"@it)
AnnotationAssertion(rdfs:label IOLite:LinguisticAct "Linguistic act"@en)
SubClassOf(IOLite:LinguisticAct DUL:PlanExecution)
SubClassOf(IOLite:LinguisticAct ObjectSomeValuesFrom(DUL:includesObject DUL:Agent))
SubClassOf(IOLite:LinguisticAct ObjectSomeValuesFrom(DUL:includesObject DUL:SocialObject))
SubClassOf(IOLite:LinguisticAct ObjectSomeValuesFrom(DUL:includesObject IOLite:LinguisticObject))
SubClassOf(IOLite:LinguisticAct ObjectSomeValuesFrom(DUL:isSettingFor DUL:InformationRealization))
SubClassOf(IOLite:LinguisticAct ObjectSomeValuesFrom(DUL:satisfies IOLite:CommunicativeFunction))
SubClassOf(IOLite:LinguisticAct ObjectMinCardinality(5 DUL:isSettingFor DUL:Entity))

# Class: IOLite:LinguisticFunction (Funzione linguistica)

AnnotationAssertion(rdfs:comment IOLite:LinguisticFunction "Any linguistic function that classifies words according to a LinguisticTheory. 
This class includes parts of speech, thematic roles, phrase structure components, verbal aspects, etc. e.g. Subject, Object, Instrument, Stative, etc.
Each linguistic function must be defined in a LinguisticTheory; e.g. a thematic role can be defined either in a generative grammar, or in construction-based theory."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:LinguisticFunction "Funzione linguistica"@it)
AnnotationAssertion(rdfs:label IOLite:LinguisticFunction "Linguistic function"@en)
SubClassOf(IOLite:LinguisticFunction DUL:Role)
SubClassOf(IOLite:LinguisticFunction ObjectSomeValuesFrom(DUL:isDefinedIn IOLite:LinguisticTheory))

# Class: IOLite:LinguisticObject (Oggetto linguistico)

AnnotationAssertion(rdfs:comment IOLite:LinguisticObject "An information object represented in a NaturalLanguage"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:LinguisticObject "Linguistic object"@en)
AnnotationAssertion(rdfs:label IOLite:LinguisticObject "Oggetto linguistico"@it)
SubClassOf(IOLite:LinguisticObject DUL:InformationObject)
SubClassOf(IOLite:LinguisticObject ObjectSomeValuesFrom(IOLite:hasRepresentationLanguage IOLite:NaturalLanguage))

# Class: IOLite:LinguisticTheory (Teoria linguistica)

AnnotationAssertion(rdfs:comment IOLite:LinguisticTheory "Any theory describing the structure and/or production and understanding of a natural language or a set of natural languages, or a component of one or more natural languages."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:LinguisticTheory "Linguistic theory"@en)
AnnotationAssertion(rdfs:label IOLite:LinguisticTheory "Teoria linguistica"@it)
SubClassOf(IOLite:LinguisticTheory DUL:Theory)
SubClassOf(IOLite:LinguisticTheory ObjectSomeValuesFrom(DUL:describes ObjectSomeValuesFrom(DUL:isComponentOf IOLite:NaturalLanguage)))

# Class: IOLite:Morpheme (Morfema)

AnnotationAssertion(rdfs:comment IOLite:Morpheme "A part of a word that can express a meaning, which is part of the meaning of the entire word."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Morpheme "Morfema"@it)
AnnotationAssertion(rdfs:label IOLite:Morpheme "Morpheme"@en)
SubClassOf(IOLite:Morpheme IOLite:LinguisticObject)
SubClassOf(IOLite:Morpheme ObjectSomeValuesFrom(DUL:expresses ObjectExactCardinality(1 DUL:isComponentOf)))
SubClassOf(IOLite:Morpheme ObjectSomeValuesFrom(DUL:isComponentOf IOLite:Word))

# Class: IOLite:MultimediaObject (Multimedia object)

AnnotationAssertion(rdfs:comment IOLite:MultimediaObject "An information realization that realizes heterogeneous information objects. Examples include audiovisual performances, web pages, etc."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:MultimediaObject "Multimedia object"@en)
AnnotationAssertion(rdfs:label IOLite:MultimediaObject "Oggetto multimediale"@it)
SubClassOf(IOLite:MultimediaObject DUL:InformationRealization)
SubClassOf(IOLite:MultimediaObject ObjectMinCardinality(2 DUL:realizes))

# Class: IOLite:Multiword (Polyrhematic unit)

AnnotationAssertion(rdfs:comment IOLite:Multiword "A LinguisticObject made up of more than one Word, but distinct from a Phrase, which is a higher syntactic unit."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Multiword "Lemma polirematico"@it)
AnnotationAssertion(rdfs:label IOLite:Multiword "Polyrhematic unit"@en)
SubClassOf(IOLite:Multiword IOLite:LinguisticObject)
SubClassOf(IOLite:Multiword ObjectSomeValuesFrom(DUL:hasComponent IOLite:Word))
SubClassOf(IOLite:Multiword ObjectMinCardinality(2 DUL:hasComponent))

# Class: IOLite:NaturalLanguage (Linguaggio naturale)

AnnotationAssertion(rdfs:comment IOLite:NaturalLanguage "A natural language, evolved and used in a community across time.
Natural languages components are 'temporary' and 'reconstructed' out of actual usage. For example, a grammar for a (part of a) natural language has the status of a theory for that language, but alternative ones can exist (e.g. generative vs. construction grammars)."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:NaturalLanguage "Linguaggio naturale"@it)
AnnotationAssertion(rdfs:label IOLite:NaturalLanguage "Natural language"@en)
SubClassOf(IOLite:NaturalLanguage IOLite:Language)
SubClassOf(IOLite:NaturalLanguage ObjectSomeValuesFrom(DUL:isConceptualizedBy DUL:Community))

# Class: IOLite:Painting (Dipinto)

AnnotationAssertion(rdfs:comment IOLite:Painting "wn noun: Graphic art consisting of an artistic composition made by applying paints to a surface; \"a small painting by Picasso\"; \"he bought the painting as an investment\"; \"his pictures hang in the Louvre\""^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Painting "Dipinto"@it)
AnnotationAssertion(rdfs:label IOLite:Painting "Painting"@en)
SubClassOf(IOLite:Painting IOLite:GraphicArt)

# Class: IOLite:Phoneme (Fonema)

AnnotationAssertion(rdfs:comment IOLite:Phoneme "A part of a word as it can be realized by Voicing
A written information realization can be 'about' a phoneme (as in the case of transcription systems), but it does not 'realize' it: only Grapheme(s) are realized by written information (Writing).
A phoneme is not necessarily able to express a meaning (any dul:SocialObject), although it can in principle (e.g. 'a' in English)."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Phoneme "Fonema"@it)
AnnotationAssertion(rdfs:label IOLite:Phoneme "Phoneme"@en)
SubClassOf(IOLite:Phoneme IOLite:LinguisticObject)
SubClassOf(IOLite:Phoneme ObjectAllValuesFrom(DUL:isRealizedBy IOLite:Voicing))

# Class: IOLite:Phrase (Phrase)

AnnotationAssertion(rdfs:comment IOLite:Phrase "A composition of Word(s) that can be considered a higher syntactic unit than a Word, and dul:isComponentOf a Sentence"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Phrase "Phrase"@en)
AnnotationAssertion(rdfs:label IOLite:Phrase "Proposizione"@it)
SubClassOf(IOLite:Phrase IOLite:LinguisticObject)
SubClassOf(IOLite:Phrase ObjectSomeValuesFrom(DUL:hasComponent IOLite:Word))
SubClassOf(IOLite:Phrase ObjectSomeValuesFrom(DUL:isComponentOf IOLite:Sentence))

# Class: IOLite:PlasticArt (Opera plastica)

AnnotationAssertion(rdfs:comment IOLite:PlasticArt "wn noun: The arts of shaping or modeling; carving and sculpture"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:PlasticArt "Opera plastica"@it)
AnnotationAssertion(rdfs:label IOLite:PlasticArt "Plastic art"@en)
SubClassOf(IOLite:PlasticArt IOLite:Depiction)

# Class: IOLite:Sculpture (Sculpture)

AnnotationAssertion(rdfs:comment IOLite:Sculpture "wn noun: A three-dimensional work of plastic art"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Sculpture "Sculpture"@en)
AnnotationAssertion(rdfs:label IOLite:Sculpture "Scultura"@it)
SubClassOf(IOLite:Sculpture IOLite:PlasticArt)

# Class: IOLite:Sentence (Sentence)

AnnotationAssertion(rdfs:comment IOLite:Sentence "A composition of Phrase(s), assumed to express a state of affairs (here modelled as a dul:Situation). Graphically, a period is usually considered its boundary."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Sentence "Frase"@it)
AnnotationAssertion(rdfs:label IOLite:Sentence "Sentence"@en)
SubClassOf(IOLite:Sentence IOLite:LinguisticObject)
SubClassOf(IOLite:Sentence ObjectSomeValuesFrom(DUL:expresses DUL:Situation))
SubClassOf(IOLite:Sentence ObjectSomeValuesFrom(DUL:hasComponent IOLite:Phrase))

# Class: IOLite:Sound (Sound)

AnnotationAssertion(rdfs:comment IOLite:Sound "An information realization consisting of sound waves."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Sound "Sound"@en)
SubClassOf(IOLite:Sound DUL:Process)

# Class: IOLite:Speech (Discorso)

AnnotationAssertion(rdfs:comment IOLite:Speech "Conventional sounds realizing explicit communication. Speech is a primary code of communication (primary means that is an original body expression, especially if first learnt)."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Speech "Discorso"@it)
AnnotationAssertion(rdfs:label IOLite:Speech "Speech"@en)
SubClassOf(IOLite:Speech DUL:InformationRealization)
SubClassOf(IOLite:Speech IOLite:Voicing)
SubClassOf(IOLite:Speech ObjectSomeValuesFrom(DUL:realizes IOLite:LinguisticObject))

# Class: IOLite:Statue (Statue)

AnnotationAssertion(rdfs:comment IOLite:Statue "wn noun: A sculpture representing a human or animal"^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Statue "Statua"@it)
AnnotationAssertion(rdfs:label IOLite:Statue "Statue"@en)
SubClassOf(IOLite:Statue IOLite:Sculpture)

# Class: IOLite:Term (Termine)

AnnotationAssertion(rdfs:comment IOLite:Term "A word or multiword that is established in some terminology from a domain of discourse."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Term "Term"@en)
AnnotationAssertion(rdfs:label IOLite:Term "Termine"@it)
SubClassOf(IOLite:Term IOLite:LinguisticObject)
SubClassOf(IOLite:Term ObjectUnionOf(IOLite:Multiword IOLite:Word))
SubClassOf(IOLite:Term ObjectSomeValuesFrom(IOLite:hasSchema IOLite:KOS))

# Class: IOLite:Text (Text)

AnnotationAssertion(rdfs:comment IOLite:Text "A LinguisticObject composed of at least one Sentence, and assumed to be realized in written form."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Text "Testo"@it)
AnnotationAssertion(rdfs:label IOLite:Text "Text"@en)
SubClassOf(IOLite:Text IOLite:LinguisticObject)
SubClassOf(IOLite:Text ObjectSomeValuesFrom(DUL:hasComponent IOLite:Sentence))
SubClassOf(IOLite:Text ObjectSomeValuesFrom(DUL:isRealizedBy IOLite:Writing))

# Class: IOLite:Thesaurus (Tesauro)

AnnotationAssertion(rdfs:comment IOLite:Thesaurus "A collection of categories organized according to a specified syntax, typically used to create a controlled terminology in a domain. A useful rdfs encoding of a typical thesaurus syntax is the SKOS schema."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Thesaurus "Tesauro"@it)
AnnotationAssertion(rdfs:label IOLite:Thesaurus "Thesaurus"@en)
SubClassOf(IOLite:Thesaurus IOLite:KOS)

# Class: IOLite:Voicing (Vocalizzazione)

AnnotationAssertion(rdfs:comment IOLite:Voicing "An information realization consisting of uttered sounds. In natural agents, it always co-occurs with bodily movements."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Voicing "Vocalizzazione"@it)
AnnotationAssertion(rdfs:label IOLite:Voicing "Voicing"@en)
SubClassOf(IOLite:Voicing IOLite:Sound)
SubClassOf(IOLite:Voicing ObjectSomeValuesFrom(DUL:hasParticipant DUL:PhysicalAgent))

# Class: IOLite:WebPage (Web page)

AnnotationAssertion(rdfs:label IOLite:WebPage "Web page"@en)
SubClassOf(IOLite:WebPage IOLite:DigitalResource)
SubClassOf(IOLite:WebPage IOLite:MultimediaObject)

# Class: IOLite:Word (Word)

AnnotationAssertion(rdfs:comment IOLite:Word "A linguistic object consisting of a string (independently of its physical realization).
Its topological unity can change according to its physical realization: as a written realization, its boundaries are blank spaces, as a spoken realization, sometimes is silence, sometimes not, and higher order features intervene.
Grammatical notions, such as noun, verb, adjective, etc., are roles defined by a grammar, and words (or larger linguistic objects) can play those roles in a given language. E.g., the word 'share' can play both 'verb' and 'noun' roles in contemporary English, while the word 'come' can only play the 'verb' role in English, and the 'adverb' or 'conjunction' roles in Italian (but if we consider a word as only realized by phonemes, i.e. if we consider the oral realizations of 'come', there is no common word 'come' in the two languages)."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Word "Parola"@it)
AnnotationAssertion(rdfs:label IOLite:Word "Word"@en)
SubClassOf(IOLite:Word IOLite:LinguisticObject)
SubClassOf(IOLite:Word ObjectAllValuesFrom(DUL:hasComponent ObjectComplementOf(IOLite:Word)))

# Class: IOLite:Writing (Writing)

AnnotationAssertion(rdfs:comment IOLite:Writing "An information realization based on conventional symbols.
It is a secondary code of communication (secondary means that it is about an original bodily expression, i.e. a primary code). Therefore, we are not considering here early forms of iconic expression, which could be considered primary."^^xsd:string)
AnnotationAssertion(rdfs:label IOLite:Writing "Realizzazione scritta"@it)
AnnotationAssertion(rdfs:label IOLite:Writing "Writing"@en)
SubClassOf(IOLite:Writing IOLite:Depiction)
SubClassOf(IOLite:Writing ObjectSomeValuesFrom(DUL:realizes IOLite:LinguisticObject))


)
